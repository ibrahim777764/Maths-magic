{"version":3,"sources":["logic/operate.js","pages/Calculator.js","logic/calculate.js","pages/Home.js","components/NavBar.js","pages/Quotes.js","App.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","useState","total","next","digitObj","setDigitObj","calculator","obj","button","newObj","buttonName","match","includes","parseFloat","calculate","className","undefined","returnResults","type","value","onClick","Home","NavBar","Navbar","Nav","id","path","text","map","link","to","activeClassName","exact","Quotes","App","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAEe,SAASA,EAAQC,EAAWC,EAAWC,GACpD,IAAMC,EAAMC,IAAIJ,GACVK,EAAMD,IAAIH,GAChB,GAAkB,MAAdC,EACF,OAAOC,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdL,EACF,OAAOC,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdL,EACF,OAAOC,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdL,EACF,IACE,OAAOC,EAAIO,IAAIL,GAAKE,WACpB,MAAOI,GACP,MAAO,qBAGX,GAAkB,MAAdT,EACF,OAAOC,EAAIS,IAAIP,GAAKE,WAEtB,MAAMM,MAAM,sBAAD,OAAuBX,EAAvB,M,WC0CEY,EA/DI,WACjB,MAAgCC,mBAAS,CACvCC,MAAO,KACPC,KAAM,KACNf,UAAW,OAHb,mBAAOgB,EAAP,KAAiBC,EAAjB,KAMMC,EAAa,SAACC,EAAKC,GACvB,IAAMC,ECIK,SAAmBF,EAAKG,GACrC,MAAmB,OAAfA,EACK,CACLR,MAAO,KACPC,KAAM,KACNf,UAAW,MAIFsB,EArBCC,MAAM,UAsBC,MAAfD,GAAmC,MAAbH,EAAIJ,KACrB,GAGLI,EAAInB,UACFmB,EAAIJ,KACC,2BAAKI,GAAZ,IAAiBJ,KAAMI,EAAIJ,KAAOO,IAE7B,2BAAKH,GAAZ,IAAiBJ,KAAMO,IAGrBH,EAAIJ,KACC,CACLA,KAAMI,EAAIJ,KAAOO,EACjBR,MAAO,MAGJ,CACLC,KAAMO,EACNR,MAAO,MAIQ,MAAfQ,EACEH,EAAIJ,KACFI,EAAIJ,KAAKS,SAAS,KACb,eAAKL,GAEP,2BAAKA,GAAZ,IAAiBJ,KAAK,GAAD,OAAKI,EAAIJ,KAAT,OAEnBI,EAAInB,UACC,CAAEe,KAAM,MAEbI,EAAIL,MACFK,EAAIL,MAAMU,SAAS,KACd,GAEF,CAAEV,MAAM,GAAD,OAAKK,EAAIL,MAAT,MAET,CAAEA,MAAO,MAGC,MAAfQ,EACEH,EAAIJ,MAAQI,EAAInB,UACX,CACLc,MAAOjB,EAAQsB,EAAIL,MAAOK,EAAIJ,KAAMI,EAAInB,WACxCe,KAAM,KACNf,UAAW,MAIR,GAGU,QAAfsB,EACEH,EAAIJ,KACC,2BAAKI,GAAZ,IAAiBJ,OAAQ,EAAIU,WAAWN,EAAIJ,OAAOV,aAEjDc,EAAIL,MACC,2BAAKK,GAAZ,IAAiBL,QAAS,EAAIW,WAAWN,EAAIL,QAAQT,aAEhD,GAYJc,EAAIJ,OAAQI,EAAIL,OAAUK,EAAInB,UAK/BmB,EAAInB,UACFmB,EAAIL,QAAUK,EAAIJ,KACb,2BAAKI,GAAZ,IAAiBnB,UAAWsB,IAGvB,CACLR,MAAOjB,EAAQsB,EAAIL,MAAOK,EAAIJ,KAAMI,EAAInB,WACxCe,KAAM,KACNf,UAAWsB,GAOVH,EAAIJ,KAKF,CACLD,MAAOK,EAAIJ,KACXA,KAAM,KACNf,UAAWsB,GAPJ,CAAEtB,UAAWsB,GApBb,2BAAKH,GAAZ,IAAiBnB,UAAWsB,IDxFbI,CAAUP,EAAKC,GAC9BH,EAAYI,IAmBd,OACE,0BAASM,UAAU,aAAnB,UACE,oDACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,SApBgB,WACpB,IAAQb,EAA2BE,EAA3BF,MAAOC,EAAoBC,EAApBD,KAAMf,EAAcgB,EAAdhB,UAErB,OAAc,OAAVc,GAA2B,OAATC,EACb,EACM,OAATA,GAA2B,OAAVD,EACdC,EACO,OAAVD,GAA2B,OAATC,GACJ,OAAdf,QAAoC4B,IAAd5B,EAClB,GAAN,OAAUc,EAAV,YAAmBd,EAAnB,YAAgCe,GAI7BD,EAQCe,KAEJ,sBAAKF,UAAU,SAAf,UACE,wBAAQG,KAAK,SAASH,UAAU,cAAcI,MAAM,KAAKC,QAAS,WAAQd,EAAWF,EAAU,OAA/F,gBACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,MAAMC,QAAS,WAAQd,EAAWF,EAAU,QAAhG,iBACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,uBAAuBI,MAAM,OAAIC,QAAS,WAAQd,EAAWF,EAAU,SAAvG,kBACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,uBAAuBI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAAvG,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,uBAAuBI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAAvG,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,uBAAuBI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAAvG,kBAEF,uBAAMW,UAAU,MAAhB,UACE,wBAAQG,KAAK,SAASH,UAAU,cAAcI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA9F,eACA,wBAAQc,KAAK,SAASH,UAAU,eAAeI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAA/F,eACA,wBAAQc,KAAK,SAASH,UAAU,uBAAuBI,MAAM,IAAIC,QAAS,WAAQd,EAAWF,EAAU,MAAvG,yBE3BKiB,EA9BF,kBACX,qCACE,sDACA,8QAMA,8QAMA,8QAMA,kR,gBCWWC,EA9BA,WAkBb,OACE,eAACC,EAAA,EAAD,CAAQR,UAAU,SAAlB,UACE,+CACA,cAACS,EAAA,EAAD,CAAKT,UAAU,WAAf,SApBU,CACZ,CACEU,GAAI,EACJC,KAAM,IACNC,KAAM,QAER,CACEF,GAAI,EACJC,KAAM,cACNC,KAAM,cAER,CACEF,GAAI,EACJC,KAAM,UACNC,KAAM,WAQEC,KAAI,SAACC,GAAD,OAAU,cAAC,IAAD,CAAuBC,GAAID,EAAKH,KAAMK,gBAAgB,cAAcN,GAAG,MAAMO,OAAK,EAAlF,SAAoFH,EAAKF,MAA3EE,EAAKJ,aChBhCQ,EATA,kBACb,sBAAKlB,UAAU,SAAf,UACE,wFAGA,uDCCEmB,E,4JACJ,WACE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOR,KAAK,cAAZ,SACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOW,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,gB,GAfMS,IAAMC,WAuBTF,IC1BfG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.99414c4d.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport calculate from '../logic/calculate';\n\nconst Calculator = () => {\n  const [digitObj, setDigitObj] = useState({\n    total: null,\n    next: null,\n    operation: null,\n  });\n\n  const calculator = (obj, button) => {\n    const newObj = calculate(obj, button);\n    setDigitObj(newObj);\n  };\n\n  const returnResults = () => {\n    const { total, next, operation } = digitObj;\n\n    if (total === null && next === null) {\n      return 0;\n    } if (next !== null && total === null) {\n      return next;\n    } if (total !== null && next !== null) {\n      if (operation !== null && operation !== undefined) {\n        return `${total} ${operation} ${next}`;\n      }\n      return total;\n    }\n    return total;\n  };\n\n  return (\n    <section className=\"calculator\">\n      <h1>Lets do some Math!</h1>\n      <div className=\"container\">\n        <div className=\"returnSection\">\n          {(returnResults())}\n        </div>\n        <div className=\"digits\">\n          <button type=\"button\" className=\"digits-elts\" value=\"AC\" onClick={() => { calculator(digitObj, 'AC'); }}>AC</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"+/-\" onClick={() => { calculator(digitObj, '+/-'); }}>+/-</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"%\" onClick={() => { calculator(digitObj, '%'); }}>%</button>\n          <button type=\"button\" className=\"digits-elts operator\" value=\"รท\" onClick={() => { calculator(digitObj, 'รท'); }}>รท</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"7\" onClick={() => { calculator(digitObj, '7'); }}>7</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"8\" onClick={() => { calculator(digitObj, '8'); }}>8</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"9\" onClick={() => { calculator(digitObj, '9'); }}>9</button>\n          <button type=\"button\" className=\"digits-elts operator\" value=\"x\" onClick={() => { calculator(digitObj, 'x'); }}>x</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"4\" onClick={() => { calculator(digitObj, '4'); }}>4</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"5\" onClick={() => { calculator(digitObj, '5'); }}>5</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"6\" onClick={() => { calculator(digitObj, '6'); }}>6</button>\n          <button type=\"button\" className=\"digits-elts operator\" value=\"-\" onClick={() => { calculator(digitObj, '-'); }}>-</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"1\" onClick={() => { calculator(digitObj, '1'); }}>1</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"2\" onClick={() => { calculator(digitObj, '2'); }}>2</button>\n          <button type=\"button\" className=\"digits-elts\" value=\"3\" onClick={() => { calculator(digitObj, '3'); }}>3</button>\n          <button type=\"button\" className=\"digits-elts operator\" value=\"+\" onClick={() => { calculator(digitObj, '+'); }}>+</button>\n        </div>\n        <span className=\"end\">\n          <button type=\"button\" className=\"digits-elts\" value=\"0\" onClick={() => { calculator(digitObj, '0'); }}>0</button>\n          <button type=\"button\" className=\"digits-elts \" value=\".\" onClick={() => { calculator(digitObj, '.'); }}>.</button>\n          <button type=\"button\" className=\"digits-elts operator\" value=\"=\" onClick={() => { calculator(digitObj, '='); }}>=</button>\n        </span>\n      </div>\n    </section>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\n\nconst Home = () => (\n  <>\n    <h1>Welcome to Our Page!</h1>\n    <p>\n      Lorem ipsum, dolor sit amet consectetur adipisicing elit. Amet esse\n      aperiam reprehenderit repudiandae quod vitae? Eius perspiciatis expedita\n      porro quos accusamus odio non, consequatur provident enim, assumenda\n      distinctio aperiam dolores.\n    </p>\n    <p>\n      Lorem ipsum, dolor sit amet consectetur adipisicing elit. Amet esse\n      aperiam reprehenderit repudiandae quod vitae? Eius perspiciatis expedita\n      porro quos accusamus odio non, consequatur provident enim, assumenda\n      distinctio aperiam dolores.\n    </p>\n    <p>\n      Lorem ipsum, dolor sit amet consectetur adipisicing elit. Amet esse\n      aperiam reprehenderit repudiandae quod vitae? Eius perspiciatis expedita\n      porro quos accusamus odio non, consequatur provident enim, assumenda\n      distinctio aperiam dolores.\n    </p>\n    <p>\n      Lorem ipsum, dolor sit amet consectetur adipisicing elit. Amet esse\n      aperiam reprehenderit repudiandae quod vitae? Eius perspiciatis expedita\n      porro quos accusamus odio non, consequatur provident enim, assumenda\n      distinctio aperiam dolores.\n    </p>\n  </>\n);\n\nexport default Home;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\n\nconst NavBar = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/calculator',\n      text: 'Calculator',\n    },\n    {\n      id: 3,\n      path: '/quotes',\n      text: 'Quotes',\n    },\n  ];\n  return (\n    <Navbar className=\"navbar\">\n      <h1>Math Magician</h1>\n      <Nav className=\"navLinks\">\n        {\n        links.map((link) => <NavLink key={link.id} to={link.path} activeClassName=\"active-link\" id=\"nav\" exact>{link.text}</NavLink>)\n      }\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst Quotes = () => (\n  <div className=\"quotes\">\n    <p>\n      The only way to learn Mathematics, is to do mathematics\n    </p>\n    <strong>~ PAUL HALMOS</strong>\n  </div>\n);\n\nexport default Quotes;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport './App.css';\nimport Calculator from './pages/Calculator';\nimport Home from './pages/Home';\nimport NavBar from './components/NavBar';\nimport Quotes from './pages/Quotes';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Switch>\n          <Route path=\"/calculator\">\n            <div className=\"App\">\n              <Calculator />\n            </div>\n          </Route>\n          <Route path=\"/quotes\">\n            <Quotes />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}